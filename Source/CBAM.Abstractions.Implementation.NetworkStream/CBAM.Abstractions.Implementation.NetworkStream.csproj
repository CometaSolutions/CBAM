<Project Sdk="Microsoft.NET.Sdk">


  <PropertyGroup>
    <TargetFrameworks>netstandard1.0;netstandard1.3;netstandard2.0;netcoreapp1.1;net45;net40</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup>
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
    <TreatSpecificWarningsAsErrors />
    <CheckForOverflowUnderflow>True</CheckForOverflowUnderflow>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>


  <ItemGroup>
    <ProjectReference Include="..\CBAM.Abstractions.Implementation\CBAM.Abstractions.Implementation.csproj" />
    <ProjectReference Include="..\CBAM.Abstractions\CBAM.Abstractions.csproj" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard1.0'">
    <PackageReference Include="UtilPack.Configuration.NetworkStream" Version="1.0.0" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' != 'netstandard1.0'">
    <PackageReference Include="UtilPack.ResourcePooling.NetworkStream" Version="1.0.0" />
  </ItemGroup>
  
  <PropertyGroup>
    <VersionPrefix>0.5.3</VersionPrefix>
    <VersionSuffix></VersionSuffix>
    <AssemblyTitle>$(AssemblyName)</AssemblyTitle>
    <Description>Provides skeleton implementation and ready solution for typical connection factory class operating on (network) stream..</Description>
  </PropertyGroup>
  
 
  <!-- NuGet package stuff -->
  <PropertyGroup>
    <PackageId>$(AssemblyName)</PackageId>
    <PackageVersion>$(VersionPrefix)</PackageVersion>
    <PackageVersion Condition=" '$(VersionSuffix)' != ''">$(PackageVersion)-$(VersionSuffix)</PackageVersion>
    <PackageReleaseNotes>Updated to newer UtilPack version because the fixed bug is critical for CBAM (underlying stream would not always get closed when cancellation token was canceled).</PackageReleaseNotes>
    <PackageTags>binary serialization async asynchronous network stream connection factory skeleton</PackageTags>
    <Title>CBAM NetworkStream Factory Implementation</Title>
  </PropertyGroup>
  
  <PropertyGroup>
    <NuGetPushOnBuildFile>$([MSBuild]::GetPathOfFileAbove(NuGetPushOnBuild.targets))</NuGetPushOnBuildFile>
  </PropertyGroup>
  <Import Project="$(NuGetPushOnBuildFile)" Condition="Exists('$(NuGetPushOnBuildFile)')" />

</Project>
