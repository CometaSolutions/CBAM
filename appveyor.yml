version: '1.0.{build}-{branch}'
image: Ubuntu1804
services:
  - docker
cache:
  - 'nuget-package-dir'
  - 'docker-images'
  - 'v4-ref-assemblies'

environment:
  RELATIVE_NUGET_PACKAGE_DIR: 'nuget-package-dir/'
  RELATIVE_CS_OUTPUT: 'output/'
  CI_FOLDER: 'CIPipeline'
  # Due the way AV clones repo when there is tag pushed, we lose information about the branch (e.g. master). So deploy whenever there is tag made, no matter which branch we are on.
  DEPLOYABLE_BRANCH: 'HEAD'

  # Any additional readonly volumes that should be visible within docker
  ADDITIONAL_VOLUME_DIRECTORIES: 'v4-ref-assemblies'

# The version of .NET Core (and Docker image)
  DOTNET_VERSION: '2.1'

# Where to publish NuGet packages:
  DEPLOY_NUGET_SOURCE: 'https://api.nuget.org/v3/index.json'

# The key to use for publishing NuGet packages:
  DEPLOY_NUGET_API_KEY:
    secure: ozpWqVMZD6uURhjXm51KtXKnD4OyUofShpg1zEzKESDqsyTD6cTDKB/ML1ER5YEQ

# For when no symbols should be pushed:
  DEPLOY_NUGET_NO_SYMBOLS: true

# For when need to sign with secret sign key:
  ASSEMBLY_SIGN_KEY:
    secure: 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


  ADDITIONAL_ENVIRONMENT_VARS: 'CBAM_TEST_HTTP_CONFIG CBAM_TEST_HTTP_CONFIG_ENCRYPTED CBAM_TEST_NATS_CONFIG CBAM_TEST_PGSQL_CONFIG CBAM_TEST_PGSQL_CONFIG_ENCRYPTED CBAM_TEST_PGSQL_CONFIG_SCRAM'
  CBAM_TEST_HTTP_CONFIG: '/repo-dir/contents/Source/Tests/Tests.CBAM.HTTP.Implementation/config.unencrypted.json'
  CBAM_TEST_HTTP_CONFIG_ENCRYPTED: '/repo-dir/contents/Source/Tests/Tests.CBAM.HTTP.Implementation/config.encrypted.json'
  CBAM_TEST_NATS_CONFIG: '/repo-dir/contents/Source/Tests/Tests.CBAM.NATS.Implementation/config.unencrypted.json'
  CBAM_TEST_PGSQL_CONFIG: '/repo-dir/contents/Source/Tests/Tests.CBAM.SQL.PostgreSQL.Implementation/config.normal.json'
  CBAM_TEST_PGSQL_CONFIG_ENCRYPTED: '/repo-dir/contents/Source/Tests/Tests.CBAM.SQL.PostgreSQL.Implementation/config.encrypted.json'
  CBAM_TEST_PGSQL_CONFIG_SCRAM: '/repo-dir/contents/Source/Tests/Tests.CBAM.SQL.PostgreSQL.Implementation/config.scram.json'
  TEST_BEFORE_DOCKER_SCRIPT: 'Build/testenv_initialize.sh'
  TEST_AFTER_DOCKER_SCRIPT: 'Build/testenv_cleanup.sh'

init:
  - sh: git config --global core.autocrlf false
  - sh: appveyor UpdateBuild -Version "build-${APPVEYOR_REPO_COMMIT:0:8}-${APPVEYOR_BUILD_NUMBER}"

install:
  - sh: 'git -C "${APPVEYOR_BUILD_FOLDER}" submodule update --init --recursive'
  - sh: 'mkdir "${APPVEYOR_BUILD_FOLDER}/git"'
  - sh: 'git -C "${APPVEYOR_BUILD_FOLDER}" ls-tree --name-only -z HEAD | xargs --null mv -t "${APPVEYOR_BUILD_FOLDER}/git"'
  - sh: '"${APPVEYOR_BUILD_FOLDER}/git/${CI_FOLDER}/download-net40-ref-assemblies.sh" "${APPVEYOR_BUILD_FOLDER}/v4-ref-assemblies"'

before_build:
  - sh: '"${APPVEYOR_BUILD_FOLDER}/git/${CI_FOLDER}/appveyor/sync_docker_image.sh" "microsoft/dotnet:${DOTNET_VERSION}-sdk-alpine" "${APPVEYOR_BUILD_FOLDER}/docker-images/dotnet-sdk.tar"'
  - sh: '"${APPVEYOR_BUILD_FOLDER}/git/${CI_FOLDER}/appveyor/sync_docker_image.sh" "nats:1.3.0-linux" "${APPVEYOR_BUILD_FOLDER}/docker-images/nats.tar"'
  - sh: '"${APPVEYOR_BUILD_FOLDER}/git/${CI_FOLDER}/appveyor/sync_docker_image.sh" "postgres:11.1-alpine" "${APPVEYOR_BUILD_FOLDER}/docker-images/pgsql.tar"'
  - sh: '"${APPVEYOR_BUILD_FOLDER}/git/${CI_FOLDER}/appveyor/sync_docker_image.sh" "nginx:1.15.7-alpine" "${APPVEYOR_BUILD_FOLDER}/docker-images/nginx.tar"'


build_script:
  - sh: '"${APPVEYOR_BUILD_FOLDER}/git/${CI_FOLDER}/build.sh"'
  - sh: 'sudo chown -R `id -u` "${APPVEYOR_BUILD_FOLDER}/${RELATIVE_CS_OUTPUT}"'
  - sh: 'sudo chown -R `id -u` "${APPVEYOR_BUILD_FOLDER}/${RELATIVE_NUGET_PACKAGE_DIR}"'

test_script:
  - sh: '"${APPVEYOR_BUILD_FOLDER}/git/${CI_FOLDER}/test.sh" "${APPVEYOR_BUILD_FOLDER}/git/${CI_FOLDER}/appveyor/add_tests.sh"'
  - sh: 'sudo chown -R `id -u` "${APPVEYOR_BUILD_FOLDER}/${RELATIVE_CS_OUTPUT}"'
  - sh: 'sudo chown -R `id -u` "${APPVEYOR_BUILD_FOLDER}/${RELATIVE_NUGET_PACKAGE_DIR}"'

after_test:
  - sh: '"${APPVEYOR_BUILD_FOLDER}/git/${CI_FOLDER}/package.sh" "${APPVEYOR_BUILD_FOLDER}/git/${CI_FOLDER}/appveyor/upload_packages.sh"'
  - sh: 'sudo chown -R `id -u` "${APPVEYOR_BUILD_FOLDER}/${RELATIVE_CS_OUTPUT}"'
  - sh: 'sudo chown -R `id -u` "${APPVEYOR_BUILD_FOLDER}/${RELATIVE_NUGET_PACKAGE_DIR}"'
  
deploy_script:
  - sh: '${APPVEYOR_BUILD_FOLDER}/git/${CI_FOLDER}/deploy.sh'
