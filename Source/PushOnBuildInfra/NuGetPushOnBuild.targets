<Project Sdk="Microsoft.NET.Sdk">
  <!-- This file exists separately in order not to "pollute" the original .csproj file with UtilPack.NuGet.MSBuild package reference. -->
  
  <ItemGroup>
    <PackageReference Include="UtilPack.NuGet.MSBuild" Version="1.0.0" />
  </ItemGroup>

  <UsingTask
    Condition=" '$(UtilPackNuGetMSBuildAssemblyPath)' != '' "
    TaskFactory="UtilPack.NuGet.MSBuild.NuGetTaskRunnerFactory"
    AssemblyFile="$(UtilPackNuGetMSBuildAssemblyPath)"
    TaskName="UtilPack.NuGet.Push.MSBuild.PushTask"
    >
    <Task>
      <NuGetTaskInfo>
        <PackageID>UtilPack.NuGet.Push.MSBuild</PackageID>
        <PackageVersion>1.0.0</PackageVersion>
      </NuGetTaskInfo>
    </Task>
  </UsingTask>

  <!-- 
    Setting GeneratePackageOnBuild to true will cause Pack target to be run.
    Our target will run after Pack.
    -->
  <Target Name="NuGetPush">
    <Error Condition=" '$(PackageFilePath)' == '' " Text="Please specify package file path via PackageFilePath property." />
    <Error Condition=" '$(NuGetPushSources)' == '' " Text="Please specify push sources (separated by semicolon) via NuGetPushSources property." />
    
    <ItemGroup>
      <NuGetPushSourcesItems Include="$(NuGetPushSources)"/>
    </ItemGroup>
    
    <PropertyGroup>
      <RetryTimeoutForDirectoryDeletionFail Condition=" '$(RetryTimeoutForDirectoryDeletionFail)' == '' ">100</RetryTimeoutForDirectoryDeletionFail>
    </PropertyGroup>
    
    <!--
      This will push the package file generated by Pack target to given sources (typically some local directory, for rapid development).
      -->
    <UtilPack.NuGet.Push.MSBuild.PushTask
      PackageFilePath="$(PackageFilePath)"
      SourceNames="@(NuGetPushSourcesItems)"
      RetryTimeoutForDirectoryDeletionFail="$(RetryTimeoutForDirectoryDeletionFail)"
      />
  </Target>
</Project>