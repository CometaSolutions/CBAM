<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard1.0;netstandard1.3;netstandard2.0;netcoreapp1.1;netcoreapp2.0;net45;net40</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup>
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
    <TreatSpecificWarningsAsErrors />
    <CheckForOverflowUnderflow>True</CheckForOverflowUnderflow>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="FluentCryptography.SASL.SCRAM" Version="1.0.0" />
    <PackageReference Include="ResourcePooling.Async.Implementation" Version="1.1.0" />
    <PackageReference Include="AsyncEnumeration.Implementation.Provider" Version="1.0.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\CBAM.Abstractions.Implementation.NetworkStream\CBAM.Abstractions.Implementation.NetworkStream.csproj" />
    <ProjectReference Include="..\CBAM.Abstractions.Implementation.Tabular\CBAM.Abstractions.Implementation.Tabular.csproj" />
    <ProjectReference Include="..\CBAM.SQL.Implementation\CBAM.SQL.Implementation.csproj" />
    <ProjectReference Include="..\CBAM.SQL.PostgreSQL\CBAM.SQL.PostgreSQL.csproj" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net45' ">
    <!--<Reference Include="System.Runtime" />
    <Reference Include="System.Threading.Tasks" />-->
    <Reference Include="System.Xml" />
  </ItemGroup>

  <PropertyGroup>
    <VersionPrefix>0.6.0</VersionPrefix>
    <VersionSuffix></VersionSuffix>
    <AssemblyTitle>$(AssemblyName)</AssemblyTitle>
    <Description>The Connection-Based Asynchronous Messaging (CBAM) SQL.PostgreSQL.Implementation assembly provides implementation and API in order to create connection pools which can create connections to PostgreSQL database backend. A good starting point is PgSQLConnectionPool class.</Description>
  </PropertyGroup>
    
  <!-- NuGet package stuff -->
  <PropertyGroup>
    <PackageId>$(AssemblyName)</PackageId>
    <PackageVersion>$(VersionPrefix)</PackageVersion>
    <PackageVersion Condition=" '$(VersionSuffix)' != ''">$(PackageVersion)-$(VersionSuffix)</PackageVersion>
    <PackageReleaseNotes>Updated to newer UtilPack version because the fixed bug is critical for CBAM (underlying stream would not always get closed when cancellation token was canceled).</PackageReleaseNotes>
    <PackageTags>binary serialization async asynchronous connection tabular sql data postgresql pgsql</PackageTags>
    <Title>CBAM PostgreSQL Implementation</Title>
  </PropertyGroup>

  <!--<PropertyGroup>
    <NuGetPushOnBuildFile>$([MSBuild]::GetPathOfFileAbove(NuGetPushOnBuild.targets))</NuGetPushOnBuildFile>
  </PropertyGroup>
  <Import Project="$(NuGetPushOnBuildFile)" Condition="Exists('$(NuGetPushOnBuildFile)')" /> -->
  <Import Project="$(CIPropsFilePath)" Condition=" '$(CIPropsFilePath)' != '' and Exists('$(CIPropsFilePath)') " />
  
</Project>